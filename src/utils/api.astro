---

export async function getBlogPosts(){
    // Data Fetching: List all Markdown Blog posts in the repo.
    let allBlogPosts = await Astro.glob('../pages/blog/*.mdx');
    // sorts the blog posts by publishedDate
    allBlogPosts = allBlogPosts.sort((a, b) => new Date(b.frontmatter.publishDate).valueOf() - new Date(a.frontmatter.publishDate).valueOf());
    //used for the Leftside bar most recent buttons
    let mostRecentBlogPost = allBlogPosts[0];

    return { allBlogPosts, mostRecentBlogPost }
}

export async function getBookPosts(){
    // Data Fetching: List all Markdown Book posts in the repo.
    let allBookPosts = await Astro.glob('../pages/book/*.mdx');
    // sorts the book posts by publishedDate
    allBookPosts = allBookPosts.sort((a, b) => new Date(b.frontmatter.publishDate).valueOf() - new Date(a.frontmatter.publishDate).valueOf());
    //used for the Leftside bar most recent buttons
    let mostRecentBookPost = allBookPosts[0];

    return { allBookPosts, mostRecentBookPost }
}

//an export async function that returns an array of all posts. concat all the blog posts and book posts.
export async function getPosts(){
    let blogPosts = await getBlogPosts();
    let bookPosts = await getBookPosts();
    let allPosts = blogPosts.allBlogPosts.concat(bookPosts.allBookPosts);

    return { allPosts };
}

export async function getSearchData(){
    // Data Fetching: List all Markdown Blog posts in the repo.
    let allPosts = await getPosts();
    let allPostsData = allPosts.allPosts.map(post => {
        return {
            title: post.frontmatter.title,
            author: post.frontmatter.author,
            writer: post.frontmatter.writer,
            description: post.frontmatter.description,
            tags: post.frontmatter.tags,
            url: post.url,
        }
    }
    )
    return allPostsData;
}

import JSON from '../data/author.json';


// Data Fetch an single writer data
export async function getAuthor(writer: string){
    let author = JSON[writer];
    return author;
}
---
